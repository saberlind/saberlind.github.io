(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{613:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"spring常用的依赖注入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring常用的依赖注入方式"}},[t._v("#")]),t._v(" Spring常用的依赖注入方式")]),t._v(" "),s("ol",[s("li",[t._v("setter方法注入")]),t._v(" "),s("li",[t._v("构造方法注入")])]),t._v(" "),s("h3",{attrs:{id:"spring中基于注解配置bean和装配bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中基于注解配置bean和装配bean"}},[t._v("#")]),t._v(" Spring中基于注解配置Bean和装配Bean")]),t._v(" "),s("ol",[s("li",[t._v("在Spring中配置开启组件扫描")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v('<context:component-scan:base-package="com.saberlind.....">'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("compontent-scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("在具体的类上加上具体的注解")]),t._v(" "),s("li",[t._v("Spring中通常使用@Autowired或者是@Resource等注解进行Bean的装配")])]),t._v(" "),s("h3",{attrs:{id:"spring和springmvc中常用的注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring和springmvc中常用的注解"}},[t._v("#")]),t._v(" Spring和SpringMVC中常用的注解")]),t._v(" "),s("ol",[s("li",[t._v("@Component 基本注解，标识一个受Spring管理的组件")]),t._v(" "),s("li",[t._v("@Controller 标识一个表述层的组件")]),t._v(" "),s("li",[t._v("@Service 标识一个业务层的组件")]),t._v(" "),s("li",[t._v("@Repository 标识一个持久层的组件")]),t._v(" "),s("li",[t._v("@Autowired 自动装配")]),t._v(" "),s("li",[t._v('@Qualifier(" ") 指定要装配的组件的id值')]),t._v(" "),s("li",[t._v("@RequestMapping 完成请求映射")]),t._v(" "),s("li",[t._v("@RequestParam 获取请求参数")])]),t._v(" "),s("h3",{attrs:{id:"spring-bean-的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean-的生命周期"}},[t._v("#")]),t._v(" Spring Bean 的生命周期")]),t._v(" "),s("p",[t._v("默认情况下，IOC容器中bean的生命周期分为5个阶段")]),t._v(" "),s("ol",[s("li",[t._v("调用构造器，或者是通过工厂的方式创建Bean对象")]),t._v(" "),s("li",[t._v("给bean对象的属性注入值")]),t._v(" "),s("li",[t._v("调用初始化方法，进行初始化，初始化方法是通过init-method来指定的")]),t._v(" "),s("li",[t._v("使用")]),t._v(" "),s("li",[t._v("IOC容器关闭时，销毁Bean对象")])]),t._v(" "),s("p",[t._v("当加入Bean的后置处理器后，IOC容器中bean的生命周期分为7个阶段")]),t._v(" "),s("ol",[s("li",[t._v("调用构造器，或者通过工厂的方式创建Bean对象")]),t._v(" "),s("li",[t._v("给bean对象的属性注入值")]),t._v(" "),s("li",[t._v("执行Bean后置处理器中的postProcessBeforeInitialization")]),t._v(" "),s("li",[t._v("调用初始化方法，进行初始化，初始化方法是通过init-method来指定的")]),t._v(" "),s("li",[t._v("执行Bean的后置处理器中的postProcessAfterInitialization")]),t._v(" "),s("li",[t._v("使用")]),t._v(" "),s("li",[t._v("IOC容器关闭时，销毁Bean对象")])]),t._v(" "),s("h3",{attrs:{id:"springmvc-中解决post请求中文乱码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-中解决post请求中文乱码问题"}},[t._v("#")]),t._v(" SpringMVC 中解决POST请求中文乱码问题")]),t._v(" "),s("p",[t._v("通过CharacterEncodingFilter解决乱码问题")]),t._v(" "),s("p",[t._v("在web.xml中加入:")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.filter.CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("encoding"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"mybatis-中-和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-中-和-的区别"}},[t._v("#")]),t._v(" MyBatis 中#{} 和 ${} 的区别")]),t._v(" "),s("p",[t._v("#{}是预编译处理，${}是字符串拼接")]),t._v(" "),s("p",[t._v("Mybatis在处理#{}是，会将sql语句中的#{}替换成?，调用Prepared Statement的方法来赋值；")]),t._v(" "),s("p",[t._v("Mybatis在处理${}时，把${}替换成变量的值。")]),t._v(" "),s("p",[t._v("使用#{}可以有效的防止SQL注入，提高系统的安全性")]),t._v(" "),s("h3",{attrs:{id:"mybatis-结果集的映射方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-结果集的映射方式"}},[t._v("#")]),t._v(" Mybatis 结果集的映射方式")]),t._v(" "),s("ul",[s("li",[t._v("自动映射，通过resultType来指定要映射的类型。")]),t._v(" "),s("li",[t._v("自定义映射，通过resultMap来完成具体的映射规则，指定将结果集中的哪一列映射到对象的哪一个属性")])]),t._v(" "),s("h3",{attrs:{id:"mybatis-传递参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-传递参数"}},[t._v("#")]),t._v(" Mybatis 传递参数")]),t._v(" "),s("p",[t._v("单个参数：")]),t._v(" "),s("ul",[s("li",[t._v("如果是普通类型(String+8个基本)，取值时在#{}中可以任意指定，如果是对象类型，则在#{}是使用对象的属性名来取值")])]),t._v(" "),s("p",[t._v("多个参数：")]),t._v(" "),s("ul",[s("li",[t._v("Mybatis传递多个参数，默认情况下，Mybatis会对多个参数进行封装Map，取值时在#{}中可以使用0,1,2或者param1，param2。")]),t._v(" "),s("li",[t._v("建议使用命名参数，在Mapper接口的形参前面使用@Param()来指定封装Map时用的key，#{}取值时使用@Param指定的key")])]),t._v(" "),s("h3",{attrs:{id:"mybatis动态sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis动态sql"}},[t._v("#")]),t._v(" Mybatis动态SQL")]),t._v(" "),s("ul",[s("li",[t._v("where/if")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("select emp_id,emp_name,emp_salary from t_emp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- where标签会自动去掉“标签体内前面、后面多余的and/or” --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 使用if标签，让我们可以有选择的加入SQL语句的片段。这个SQL语句片段是否要加入整个SQL语句，就看if标签判断的结果是否为true --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在if标签的test属性中，可以访问实体类的属性，不可以访问数据库表的字段 --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empName != null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在if标签内部，需要访问接口的参数时还是正常写#{} --\x3e")]),t._v("\n            or emp_name=#{empName}\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empSalary "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:">"}},[t._v("&gt;")]),t._v(" 2000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            or emp_salary>#{empSalary}\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("ul",[s("li",[t._v("set/if")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("update t_emp\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- set emp_name=#{empName},emp_salary=#{empSalary} --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 使用set标签动态管理set子句，并且动态去掉两端多余的逗号 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empName != null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_name=#{empName},\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empSalary "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"<"}},[t._v("&lt;")]),t._v(" 3000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_salary=#{empSalary},\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    where emp_id=#{empId}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("ul",[s("li",[t._v("trim/id")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("select emp_id,emp_name,emp_age,emp_salary,emp_gender\n    from t_emp\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- prefix属性指定要动态添加的前缀 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- suffix属性指定要动态添加的后缀 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- prefixOverrides属性指定要动态去掉的前缀，使用“|”分隔有可能的多个值 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- suffixOverrides属性指定要动态去掉的后缀，使用“|”分隔有可能的多个值 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 当前例子用where标签实现更简洁，但是trim标签更灵活，可以用在任何有需要的地方 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("trim")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("prefix")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("suffixOverrides")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("and|or"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empName != null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_name=#{empName} and\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empSalary "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:">"}},[t._v("&gt;")]),t._v(" 3000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_salary>#{empSalary} and\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empAge "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"<"}},[t._v("&lt;")]),t._v("= 20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_age=#{empAge} or\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empGender=="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("male"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            emp_gender=#{empGender}\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("ul",[s("li",[t._v("choose/when/otherwise")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("select emp_id,emp_name,emp_salary from t_emp\nwhere\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("choose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empName != null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("emp_name=#{empName}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("empSalary "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"<"}},[t._v("&lt;")]),t._v(" 3000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("emp_salary "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"<"}},[t._v("&lt;")]),t._v(" 3000"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("when")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("otherwise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1=1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("otherwise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("choose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ul",[s("li",[t._v("foreach")])]),t._v(" "),s("h3",{attrs:{id:"spring中自动装配常用的两种装配模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中自动装配常用的两种装配模式"}},[t._v("#")]),t._v(" Spring中自动装配常用的两种装配模式")]),t._v(" "),s("ol",[s("li",[t._v("byName 根据bean对象的属性名，进行装配")]),t._v(" "),s("li",[t._v("byType 根据bean对象的属性的类型进行装配，当匹配到多个兼容类型的bean对象时，会抛出异常")])]),t._v(" "),s("h3",{attrs:{id:"动态代理的原理-常用的动态代理的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态代理的原理-常用的动态代理的实现方式"}},[t._v("#")]),t._v(" 动态代理的原理，常用的动态代理的实现方式")]),t._v(" "),s("ul",[s("li",[t._v("动态代理的原理：使用一个代理将对象包装起来，然后用改代理对象取代原始对象，任何对原始对象的调用都要通过代理，代理对象决定是否以及何时将方法调用转到原始对象上")]),t._v(" "),s("li",[t._v("动态代理的方式：\n"),s("ul",[s("li",[t._v("基于接口实现动态代理：JDK动态代理")]),t._v(" "),s("li",[t._v("基于继承实现动态代理：Cglib、Javassist动态代理")])])])]),t._v(" "),s("h3",{attrs:{id:"autowired注解的工作机制及required属性的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autowired注解的工作机制及required属性的作用"}},[t._v("#")]),t._v(" @Autowired注解的工作机制及required属性的作用")]),t._v(" "),s("ol",[s("li",[t._v("首先会使用byType的方式进行自动装配，如果能唯一匹配，则装配成功，如果匹配到多个兼容类型的bean，还会尝试byName的方式进行唯一确定，如果能唯一确定，则装配成功，如果不能唯一确定，则失败，抛出异常。")]),t._v(" "),s("li",[t._v("默认情况下，使用@Autowired标注的属性必须被装配，如果装配不了，会抛出异常，可以使用required=false来设置不是必须要被装配")])]),t._v(" "),s("h3",{attrs:{id:"springmvc中contextloaderlistener的作用以及实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc中contextloaderlistener的作用以及实现原理"}},[t._v("#")]),t._v(" SpringMVC中ContextLoaderListener的作用以及实现原理")]),t._v(" "),s("ol",[s("li",[t._v("作用：通过监听的方式在WEB应用服务器启动时将Spring的容器对象进行初始化")]),t._v(" "),s("li",[t._v("原理：ContextLoaderListener实现了ServletContextListener接口，用于监听ServletContext的创建，当监听到ServletContext创建时，在对应的contextInitialized方法中，将Spring对象进行创建，并将创建好的容器对象设置ServletContext域对象中，目的是让各个组件可以通过ServletContext共享到Spring的容器对象")])]),t._v(" "),s("h3",{attrs:{id:"mybatis的两级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的两级缓存"}},[t._v("#")]),t._v(" Mybatis的两级缓存")]),t._v(" "),s("ul",[s("li",[t._v("一级缓存SqlSession级别，默认开启")]),t._v(" "),s("li",[t._v("二级缓存NameSpace级别(Mapper)的缓存，多个SqlSession可以共享，使用时需要进行配置开启")]),t._v(" "),s("li",[t._v("查找顺序：二级缓存--\x3e一级缓存--\x3e数据库")])]),t._v(" "),s("h3",{attrs:{id:"spring-与-springmvc-整合-解决bean对象被创建两次的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-与-springmvc-整合-解决bean对象被创建两次的问题"}},[t._v("#")]),t._v(" Spring 与 SpringMVC 整合，解决bean对象被创建两次的问题")]),t._v(" "),s("p",[t._v("SpringMVC只扫描WEB相关的组件，Spring扫描除了SpringMVC之外的组件")]),t._v(" "),s("h3",{attrs:{id:"spring声明式事务中-transaction-中常用的两种事务传播行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring声明式事务中-transaction-中常用的两种事务传播行为"}},[t._v("#")]),t._v(" Spring声明式事务中@Transaction 中常用的两种事务传播行为")]),t._v(" "),s("p",[t._v("通过propagation来执行事务的传播行为")]),t._v(" "),s("ul",[s("li",[t._v("REQUIRED：使用调用者的事务，如果调用者没有事务，则启动新的事务运行")]),t._v(" "),s("li",[t._v("REQUIRES_NEW：将调用者的事务挂起，开启新的事务运行。")])]),t._v(" "),s("h3",{attrs:{id:"springmvc中处理模型数据的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc中处理模型数据的两种方式"}},[t._v("#")]),t._v(" SpringMVC中处理模型数据的两种方式")]),t._v(" "),s("ol",[s("li",[t._v("使用ModelAndView 作为方法的返回值，将模型数据和视图信息封装到ModelAndView中")]),t._v(" "),s("li",[t._v("使用Map或者是Model作为方法的形参，将模型数据添加到Map或者是Model中")])]),t._v(" "),s("h3",{attrs:{id:"rest中hiddenhttpmethodfilter过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rest中hiddenhttpmethodfilter过滤器"}},[t._v("#")]),t._v(" REST中HiddenHttpMethodFilter过滤器")]),t._v(" "),s("blockquote",[s("p",[t._v('​\t该过滤器负责转换客户端请求的方式，浏览器的请求必须是POST，并且能在请求中获取"_method"请求参数值，将请求方式转换为DELETE或者PUT')])]),t._v(" "),s("h3",{attrs:{id:"springmvc-返回json数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-返回json数据"}},[t._v("#")]),t._v(" SpringMVC 返回JSON数据")]),t._v(" "),s("ol",[s("li",[t._v("加入jackson的jar包")]),t._v(" "),s("li",[t._v("在请求处理的方法中，将返回值改为具体返回的数据的类型")]),t._v(" "),s("li",[t._v("在请求处理的方法上使用@RequestBody注解")])]),t._v(" "),s("h3",{attrs:{id:"springmvc-完成转发和重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-完成转发和重定向"}},[t._v("#")]),t._v(" SpringMVC 完成转发和重定向")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forward:/index"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redirect:前缀"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h3",{attrs:{id:"springmvc工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc工作原理"}},[t._v("#")]),t._v(" SpringMVC工作原理")]),t._v(" "),s("ol",[s("li",[t._v("用户向服务器发送请求，请求被SpringMVC前端控制器DispatchServlet捕获")]),t._v(" "),s("li",[t._v("Dispatch Servlet对请求URL进行解析，得到")])]),t._v(" "),s("h3",{attrs:{id:"spring中常用的设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中常用的设计模式"}},[t._v("#")]),t._v(" Spring中常用的设计模式")]),t._v(" "),s("ul",[s("li",[t._v("代理模式：spring中两种代理方式，若目标对象实现了若干接口，spring使用JDK的动态代理，若没有实现接口，spring使用CGLIB库生成目标类的子类")]),t._v(" "),s("li",[t._v("单例模式：在spring的配置文件中设置bean默认为单例模式")]),t._v(" "),s("li",[t._v("工厂模式：在工厂模式中，创建对象时不会对客户端暴露创建逻辑，并且是通过使用同一个接口来指向新创建的对象。Spring中使用beanFactory来创建对象的实例")]),t._v(" "),s("li",[t._v("模板模式：解决代码重复的问题")])]),t._v(" "),s("h3",{attrs:{id:"spring中ioc容器常用的接口和具体的实现类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring中ioc容器常用的接口和具体的实现类"}},[t._v("#")]),t._v(" Spring中IOC容器常用的接口和具体的实现类")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("BeanFactory：SpringIOC容器的基本设置，是最底层的实现， 面向框架本身的.")])]),t._v(" "),s("li",[s("p",[t._v("ApplicationContext：BeanFactory的子接口, 提供了更多高级的特定. 面向开发者的.")])]),t._v(" "),s("li",[s("p",[t._v("ConfigurableApplicationContext： ApplicationContext的子接口，扩展出了 close 和 refresh等 关闭 刷新容器的方法")])]),t._v(" "),s("li",[s("p",[t._v("ClassPathXmlApplicationContext：从classpath的XML配置文件中读取上下文，并生成上下文定义。应用程序上下文从程序环境变量中取得。")])]),t._v(" "),s("li",[s("p",[t._v("FileSystemXmlApplicationContext ：由文件系统中的XML配置文件读取上下文。")])]),t._v(" "),s("li",[s("p",[t._v("XmlWebApplicationContext：由Web应用的XML文件读取上下文。")])])]),t._v(" "),s("h3",{attrs:{id:"springmvc拦截器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc拦截器"}},[t._v("#")]),t._v(" SpringMVC拦截器")]),t._v(" "),s("ol",[s("li",[t._v("定义\n"),s("ol",[s("li",[t._v("实现HandlerInterceptor接口")]),t._v(" "),s("li",[t._v("继承HandlerInterceptorAdapter")])])]),t._v(" "),s("li",[t._v("配置")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.saberlind.interceptor.myInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("mapping")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("!—指定拦截--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("exclude-mapping")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("””/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("!—指定不拦截--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" com.saberlind.interceptor.MySecondInterceptor "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"mybatis获取自增主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis获取自增主键"}},[t._v("#")]),t._v(" Mybatis获取自增主键")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("”insertname”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("usegeneratedkeys")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("”true”")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyproperty")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),t._v("”id”")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n     insert into names (name) values (#{name}) \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);