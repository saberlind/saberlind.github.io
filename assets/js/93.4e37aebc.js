(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{615:function(e,t,l){"use strict";l.r(t);var i=l(4),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"springmvc的工作原理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的工作原理"}},[e._v("#")]),e._v(" SpringMVC的工作原理")]),e._v(" "),l("ol",[l("li",[e._v("用户发送请求至前端控制器DispatchServlet")]),e._v(" "),l("li",[e._v("DispatchServle收到请求调用HandlerMappering处理器映射器。")]),e._v(" "),l("li",[e._v("处理器映射器找到具体的处理器，生成处理器对象及处理器拦截器（如果有则生成）一并返回给DispatchServlet")]),e._v(" "),l("li",[e._v("DispatchServlet根据获得的处理器对象选择合适的HandlerAdapter处理器适配器进行处理")]),e._v(" "),l("li",[e._v("处理器对数据处理完成返回ModelAndView对象")]),e._v(" "),l("li",[e._v("HandlerAdapter将处理器执行结果返回给DispatchServlet")]),e._v(" "),l("li",[e._v("DispatchServlet将ModelAndView传给ViewReslover视图解析器")]),e._v(" "),l("li",[e._v("ViewReslover解析后返回具体的View")]),e._v(" "),l("li",[e._v("DispatchServlet根据View进行渲染视图（将模型数据填充到视图中）")]),e._v(" "),l("li",[e._v("DispatchServlet响应用户")])])])}),[],!1,null,null,null);t.default=r.exports}}]);