(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{610:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"redis-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-概述"}},[s._v("#")]),s._v(" Redis 概述")]),s._v(" "),t("p",[s._v("首页热门数据每次请求提交给服务器后，都查询数据库，首页是整个项目并发访问压力最大的页面")]),s._v(" "),t("p",[t("strong",[s._v("mdb")]),s._v(":  级联数据   直接支持操作json")]),s._v(" "),t("p",[s._v("​\t\t存文档数据")]),s._v(" "),t("p",[s._v("​\t\t层级关系比较复杂，数据比较稳定的数据，可以以大json的方式直接存到mdb数据库中")]),s._v(" "),t("p",[s._v("级联数据如果在mysql中保存：查询时需要多表联查")]),s._v(" "),t("p",[s._v("​\t\tmysql5.7以后支持json操作")]),s._v(" "),t("p",[s._v("​\t\tmysql8以后商业版支持内存数据库")]),s._v(" "),t("p",[t("strong",[s._v("elasticsearch")]),s._v("：复杂的海量数据的检索使用es保存")]),s._v(" "),t("p",[s._v("​\t\t电商的商品信息")]),s._v(" "),t("p",[t("strong",[s._v("redis")]),s._v("：")]),s._v(" "),t("p",[s._v("​\t\t分布式项目内存中的数据")]),s._v(" "),t("p",[s._v("​\t\t时效性的数据")]),s._v(" "),t("p",[s._v("​\t\t排行榜")]),s._v(" "),t("p",[s._v("​\t\t多个项目、应用的共享数据")]),s._v(" "),t("p",[s._v("启动redis：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-server ./myredis.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("​\t查询redis是否启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ps -aux|grep redis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("​\t关闭redis")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-cli shutdown\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动redis")]),s._v(" "),t("p",[s._v("​\t\t守护方式启动、将来宿主机需要远程连接虚拟机中的redis，需要不用绑定模式启动")]),s._v(" "),t("p",[s._v("​\t\t修改redis配置文件：(不能用集群配置文件)")]),s._v(" "),t("p",[s._v("​\t1、拷贝redis解压后的配置文件到新的路径下")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("mkdir  /myredis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cp  /opt/reids-4.0.0/redis.conf  /myredis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("​\t2、修改配置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("vim /myredis/redis.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 1、注释bind\n#bind 127.0.0.1\n# 2、关闭保护模式\nprotected-mode no\n# 3、开启守护\ndaemonize yes\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("​\t3、指定修改过的配置文件启动redis")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-server /myredis/redis.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("​\t4、关闭防火墙")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("systemctl stop firewalld\nsystemctl disable firewalld\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("​\t5、使用redisdeskmanager连接测试")]),s._v(" "),t("h2",{attrs:{id:"_1、redis数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、redis数据类型"}},[s._v("#")]),s._v(" 1、redis数据类型")]),s._v(" "),t("p",[s._v("String：字符串类型")]),s._v(" "),t("p",[s._v("​\t序列化方式保存，最大支持512mb")]),s._v(" "),t("p",[s._v("​\tsetex：给键设置过期时间")]),s._v(" "),t("p",[s._v("​\t\t验证码")]),s._v(" "),t("p",[s._v("​\tincr/dect：原子性操作")]),s._v(" "),t("p",[s._v("​\t\t\t秒杀库存")]),s._v(" "),t("p",[s._v("​\tsetnx：当键不存在时设置键")]),s._v(" "),t("p",[s._v("​\t\t\t分布式锁")]),s._v(" "),t("p",[s._v("​\t\t\t\t代码逻辑执行之前先使用setnx向redis中设置键，如果成功代表获取到锁，可以继续执行，执行完毕删除键  表示释放锁，")]),s._v(" "),t("p",[s._v("​\t\t\t其他线程setnx失败表示获取锁失败，死循环setnx，直到成功才代表获取到锁")]),s._v(" "),t("p",[s._v("List：双向链表，按照添加顺序有序，两端操作效率高")]),s._v(" "),t("p",[s._v("​\tlpush/rpop")]),s._v(" "),t("p",[s._v("​\trpush/lpop")]),s._v(" "),t("p",[s._v("​\t可以实现简单的消息队列")]),s._v(" "),t("p",[s._v("set：value值为null的hash，set和hash的键的特点一样")]),s._v(" "),t("p",[s._v("​\t无序  不可重复，可以快速判断是否存在某个元素")]),s._v(" "),t("p",[s._v("​\t秒杀成功用户列表")]),s._v(" "),t("p",[s._v("​\t日活用户")]),s._v(" "),t("p",[s._v("zset：value值存在元素分数的hash")]),s._v(" "),t("p",[s._v("​\t元素不可重复，但是按照分数有序")]),s._v(" "),t("p",[s._v("​\t\t排行榜数据")]),s._v(" "),t("p",[s._v("Hash：由多对kv组成")]),s._v(" "),t("p",[s._v("​\t一般用来描述对象")]),s._v(" "),t("h3",{attrs:{id:"_1-1-数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据结构"}},[s._v("#")]),s._v(" 1.1 数据结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://lskyimage-1306894954.cos.ap-nanjing.myqcloud.com/redis%2Fredis_struct.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"_1-2-性能对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-性能对比"}},[s._v("#")]),s._v(" 1.2 性能对比")]),s._v(" "),t("p",[s._v("redis 的字符串和哈希对比")]),s._v(" "),t("h4",{attrs:{id:"相同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[s._v("#")]),s._v(" 相同点：")]),s._v(" "),t("p",[s._v("​\t首先是他们有很多效果类似的命令，比如set和hset，mset和hmset等等，大多数情况下使用字符串存储的场景使用hash也可以实现。")]),s._v(" "),t("h4",{attrs:{id:"不同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[s._v("#")]),s._v(" 不同点：")]),s._v(" "),t("p",[s._v("​\t他们的存储结构决定了他们有一些本质的差异")]),s._v(" "),t("h4",{attrs:{id:"使用hash散列的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用hash散列的优势"}},[s._v("#")]),s._v(" 使用hash散列的优势：")]),s._v(" "),t("p",[s._v("​\t使用hash可以将数据放在同一个地方方便管理，而不必用字符串将数据放在整个数据库，而且还可以避免误操作。")]),s._v(" "),t("p",[s._v("​\t使用hash散列既可以减少创建键的数量又可以避免键名冲突。")]),s._v(" "),t("p",[s._v("​\t使用hash散列比使用字符串键更节约内存。因为在数据库中创建key都有数据库附加的管理信息（比如键的类型，最后一次访问时间等等），所以keys越多，服务器在存储附加管理信息方面消耗的内存就越多，同时花在管理数据库中key的 cpu 也会越多。而且redis本身也会对hash的存储做一些底层的优化，内存消耗更少。")]),s._v(" "),t("h4",{attrs:{id:"特定情况下使用字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特定情况下使用字符串"}},[s._v("#")]),s._v(" 特定情况下使用字符串")]),s._v(" "),t("ul",[t("li",[s._v("使用过期功能\n"),t("ul",[t("li",[s._v("因为redis的过期功能只能对键进行操作而不能对散列键的field进行操作。")])])]),s._v(" "),t("li",[s._v("对二进制存储的命令\n"),t("ul",[t("li",[s._v("因为redis目前只支持对字符串键进行setbit,getbit,bitop等二进制相关的命令操作。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("所以在使用场景中使用字符串和hash都可以的情况下，尽量使用hash")])]),s._v(" "),t("h2",{attrs:{id:"_2、redis过期数据删除策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、redis过期数据删除策略"}},[s._v("#")]),s._v(" 2、redis过期数据删除策略")]),s._v(" "),t("p",[s._v("redis如何删除过期数据：")]),s._v(" "),t("p",[s._v("定时删除：redis每隔一段时间主动取出一定量的样本删除内存中过期的数据")]),s._v(" "),t("p",[s._v("惰性删除：当查询redis中数据时，redis判断是否过期，如果过期则删除")]),s._v(" "),t("h2",{attrs:{id:"_3、redis内存淘汰策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、redis内存淘汰策略"}},[s._v("#")]),s._v(" 3、redis内存淘汰策略")]),s._v(" "),t("p",[s._v("​\tredis可以配置最大占用的内存大小，如果redis中存的数据达到了最大值，有写的操作时，redis如何处理？")]),s._v(" "),t("p",[s._v("​\t提供一种简单实现缓存失效的思路：LRU（最近少用的淘汰）。")]),s._v(" "),t("p",[s._v("​\t即Redis的缓存每命中一次，就给命中的缓存增加一定TTL（过期时间）（根据具体情况来设定, 比如10分钟）。\n一段时间后，热数据的TTL都会较大，不会自动失效，而冷数据基本上过了设定的TTL就马上失效了。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("maxmemory <bytes>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("LRU means Least Recently Used  最近最少使用(使用时间离现在远的)")])]),s._v(" "),t("p",[t("strong",[s._v("LFU means Least Frequently Used  最近不常使用(最近一段时间使用频率低的)")])]),s._v(" "),t("ul",[t("li",[s._v("volatile-lru：针对有过期时间的键，使用lru算法淘汰")]),s._v(" "),t("li",[s._v("allkeys-lru：所有的键，使用lru算法淘汰")]),s._v(" "),t("li",[s._v("volatile-lfu：有过期时间的键，使用lfu淘汰")]),s._v(" "),t("li",[s._v("allkeys-lfu：所有的键，使用lfu淘汰")]),s._v(" "),t("li",[s._v("volatile-random：从所有设置了过期时间的key中使用随机淘汰的方式进行淘汰")]),s._v(" "),t("li",[s._v("allkeys-random：针对所有的key使用随机淘汰机制进行淘汰")]),s._v(" "),t("li",[s._v("volatile-ttl：针对设置了过期时间的key，越早过期的越先被淘汰")]),s._v(" "),t("li",[s._v("noeviction：不会淘汰任何数据，当使用的内存空间超过 maxmemory 值时，再有写请求来时返回错误")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n-- 要移除数据时抽取的样本次数\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_4、redis持久化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、redis持久化"}},[s._v("#")]),s._v(" 4、redis持久化")]),s._v(" "),t("p",[s._v("​\tRedis 默认开启RDB持久化方式，在指定的时间间隔内，执行指定次数的写操作，则将内存中的数据写入到磁盘中。")]),s._v(" "),t("p",[s._v("​\tRDB 持久化适合大规模的数据恢复但它的数据一致性和完整性较差。")]),s._v(" "),t("p",[s._v("​\tRedis 需要手动开启AOF持久化方式，默认是每秒将写操作日志追加到AOF文件中。")]),s._v(" "),t("p",[s._v("​\tAOF 的数据完整性比RDB高，但记录内容多了，会影响数据恢复的效率。")]),s._v(" "),t("p",[s._v("​\tRedis 针对 AOF文件大的问题，提供重写的瘦身机制。")]),s._v(" "),t("p",[s._v("​\t若只打算用Redis 做缓存，可以关闭持久化。")]),s._v(" "),t("p",[s._v("​\t若打算使用Redis 的持久化。建议RDB和AOF都开启。其实RDB更适合做数据的备份，留一后手。AOF出问题了，还有RDB。")]),s._v(" "),t("h3",{attrs:{id:"rdb-redis-database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb-redis-database"}},[s._v("#")]),s._v(" RDB（Redis DataBase）")]),s._v(" "),t("p",[s._v("二进制快照集方式 半持久化 ，效率高，直接把内存中的数据持久化到一个dump.rdb文件中")]),s._v(" "),t("ul",[t("li",[s._v("效率高，节省磁盘")]),s._v(" "),t("li",[s._v("无法保证数据的高可用性：比如系统在定时持久化之前宕机，导致数据丢失")]),s._v(" "),t("li",[s._v("RDB是通过fork子进程来协助完成数据持久化，当数据集较大时，可能会导致服务器停止服务几百毫秒，甚至一秒")])]),s._v(" "),t("h3",{attrs:{id:"aof-append-only-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof-append-only-file"}},[s._v("#")]),s._v(" AOF（Append Only File）")]),s._v(" "),t("p",[s._v("日志拼接方式把执行的命令写到一个.aof文件中")]),s._v(" "),t("p",[s._v("将redis执行过的所有写指令记录下来，在下次redis重新启动时，只要把这些写指令从前到后再重复执行一遍，就可以实现数据恢复了。")]),s._v(" "),t("ul",[t("li",[s._v("效率低，占用磁盘")]),s._v(" "),t("li",[s._v("可以保证数据的高可用性，哪怕是在写入的过程中服务器宕机，也不会破坏日志文件中已经存在的内容，在redis下一次启动之前，可以通过，redis-check-aof工具来帮助我们解决数据一致性问题")])]),s._v(" "),t("h2",{attrs:{id:"_5、redis-缓存问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、redis-缓存问题"}},[s._v("#")]),s._v(" 5、redis 缓存问题")]),s._v(" "),t("h3",{attrs:{id:"_5-1-缓存穿透"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-缓存穿透"}},[s._v("#")]),s._v(" 5.1 缓存穿透")]),s._v(" "),t("p",[s._v("（1）缓存穿透是指查询一个一定不存在的数据。由于缓存命不中时会去查询数据库，查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到数据库去查询，造成缓存穿透。")]),s._v(" "),t("p",[s._v("解决：")]),s._v(" "),t("p",[s._v("​\t①是将空对象也缓存起来，并给它设置一个很短的过期时间，最长不超过5分钟。")]),s._v(" "),t("p",[s._v("​\t②采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。")]),s._v(" "),t("h3",{attrs:{id:"_11-2-缓存雪崩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-缓存雪崩"}},[s._v("#")]),s._v(" 11.2 缓存雪崩")]),s._v(" "),t("p",[s._v("（2）如果缓存集中在一段时间内失效，发生大量的缓存穿透，所有的查询都落在数据库上，就会造成缓存雪崩。")]),s._v(" "),t("p",[s._v("解决方案：尽量让失效的时间点不分布在同一个时间点。随机因子")]),s._v(" "),t("h3",{attrs:{id:"_11-3-缓存击穿"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-缓存击穿"}},[s._v("#")]),s._v(" 11.3 缓存击穿")]),s._v(" "),t("p",[s._v("（3）缓存击穿，是指一个key非常热点，在不停的扛着大并发，当这个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库，就像在一个屏障上凿开了一个洞。")]),s._v(" "),t("p",[s._v("解决方案：")]),s._v(" "),t("ol",[t("li",[s._v("可以设置key永不过期，自动续期？")]),s._v(" "),t("li",[s._v("使用互斥锁(mutex key)业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。")])]),s._v(" "),t("h2",{attrs:{id:"_6、redis集群slot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、redis集群slot"}},[s._v("#")]),s._v(" 6、redis集群slot")]),s._v(" "),t("p",[s._v("槽：")]),s._v(" "),t("p",[s._v("​\t\tredis集群本质是对多台服务器的内存进行合并")]),s._v(" "),t("p",[s._v("​\t\tslot就是对集群中服务器内存的的划分成数据的最小单位")]),s._v(" "),t("p",[s._v("​\t\tredis集群访问，默认16384")]),s._v(" "),t("p",[s._v("薪火相传、一主二仆、哨兵模式")]),s._v(" "),t("h2",{attrs:{id:"_7-整合redis缓存热门数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-整合redis缓存热门数据"}},[s._v("#")]),s._v(" 7. 整合redis缓存热门数据")]),s._v(" "),t("h3",{attrs:{id:"redis整合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis整合"}},[s._v("#")]),s._v(" redis整合")]),s._v(" "),t("p",[s._v("1、引入依赖")]),s._v(" "),t("p",[s._v("项目只要引入了redis的场景启动器，springboot项目启动时会自动创建RedisTemplate和StringRedisTemplate对象注入到容器中")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- lecttuce 缓存连接池--\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.apache.commons"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("commons-pool2"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.boot"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-boot-starter-data-redis"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("2、配置")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 192.168.1.170\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lettuce")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("max-active")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大连接数，负值表示没有限制，默认8")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("max-wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("-1")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大阻塞等待时间，负值表示没限制，默认-1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("max-idle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大空闲连接，默认8")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("min-idle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最小空闲连接，默认0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("3、在需要使用rdisTemplate的代码中自动装配使用")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),s._v(" redisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//缺点 自定义类型需要序列化")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//保存字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringRedisTemplate")]),s._v(" stringRedisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//缺点： 操作对象需要自己通过工具类转换")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("4、直接创建RedisTemplate对象并配置键和值的序列化器注入到容器中")]),s._v(" "),t("p",[s._v("service-base的config包下创建RedisConfig")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("redisTemplate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisConnectionFactory")]),s._v(" redisConnectionFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" redisTemplate "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    redisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKeySerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringRedisSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    redisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setValueSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenericJackson2JsonRedisSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    redisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConnectionFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("redisConnectionFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" redisTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("以后引入了service-base的项目启动时  自动装配的RedisTemplate就是上面这个，值无需实现序列化接口")]),s._v(" "),t("h3",{attrs:{id:"springcache的使用-基于aop实现自动缓存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springcache的使用-基于aop实现自动缓存管理"}},[s._v("#")]),s._v(" springcache的使用：基于aop实现自动缓存管理")]),s._v(" "),t("p",[s._v("查询方法才需要使用")]),s._v(" "),t("p",[s._v("redis缓存数据属于核心业务以外的优化操作")]),s._v(" "),t("p",[s._v("可以利用aop将缓存操作抽取为增强")]),s._v(" "),t("p",[s._v("spring-context包提供了缓存管理接口：")]),s._v(" "),t("p",[s._v("CacheManager:")]),s._v(" "),t("p",[s._v("​\t如果希望整合第三方的缓存管理，只需要实现CacheManager的缓存管理方法，就可以通过注解启用spring管理缓存，spring会自动调用CacheManager的实现类管理缓存")]),s._v(" "),t("p",[s._v("​\tRedis的场景启动器依赖中提供了RedisCacheManager 实现了CacheManager，如果注入它到容器中，启用了缓存管理后，spring会自动调用它的方法管理缓存")]),s._v(" "),t("p",[s._v("1、配置RedisCacheManager 注入到容器中")]),s._v(" "),t("p",[s._v("service-base 的RedisConfig")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CacheManager")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cacheManager")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LettuceConnectionFactory")]),s._v(" connectionFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisCacheConfiguration")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisCacheConfiguration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defaultCacheConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//过期时间600秒")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entryTtl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Duration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ofSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置序列化")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("serializeKeysWith")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisSerializationContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SerializationPair")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fromSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringRedisSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("serializeValuesWith")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisSerializationContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SerializationPair")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fromSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GenericJackson2JsonRedisSerializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("disableCachingNullValues")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisCacheManager")]),s._v(" cacheManager "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisCacheManager")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("builder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("connectionFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cacheDefaults")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" cacheManager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("2、启动spring的缓存管理")]),s._v(" "),t("p",[s._v("启动类上添加注解")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@EnableCaching")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启用缓存管理")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("3、在需要缓存管理的方法上指定使用缓存管理并配置缓存的键")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value+key合起来 拼接缓存到redis的键")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value一般表示模块   key表示本次缓存的数据类型 key必须添加单引号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//拼接后的key为： ad::banners")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Cacheable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ad"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'banners'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_8-redis哈希槽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-redis哈希槽"}},[s._v("#")]),s._v(" 8. Redis哈希槽")]),s._v(" "),t("p",[s._v("​\tRedis集群有16384个哈希槽，每个key通 过CRC16校验后对16384取模来决定放置哪个槽，集群的每个节点负责一部分hash槽。")]),s._v(" "),t("h2",{attrs:{id:"_9-分布式锁实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-分布式锁实现"}},[s._v("#")]),s._v(" 9. 分布式锁实现")]),s._v(" "),t("h2",{attrs:{id:"_10-redis保证数据一致性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-redis保证数据一致性"}},[s._v("#")]),s._v(" 10. Redis保证数据一致性")]),s._v(" "),t("h3",{attrs:{id:"_1-双写模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-双写模式"}},[s._v("#")]),s._v(" 1. 双写模式")]),s._v(" "),t("p",[s._v("因为程序出异常mysql可以回滚，redis不会回滚，所以不管先写哪个都会出现数据不一致")]),s._v(" "),t("h3",{attrs:{id:"_2-失效模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-失效模式"}},[s._v("#")]),s._v(" 2. 失效模式")]),s._v(" "),t("p",[s._v("先删redis或者先写mysql：单线程没问题，多线程会出现线程不一致")]),s._v(" "),t("h3",{attrs:{id:"_3-双删模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-双删模式"}},[s._v("#")]),s._v(" 3. 双删模式 *")]),s._v(" "),t("p",[s._v("删缓存--\x3e写mysql--\x3e提交事务--\x3e再次异步删除缓存（借助AOP后置通知）")]),s._v(" "),t("h2",{attrs:{id:"_12-部署模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-部署模式"}},[s._v("#")]),s._v(" 12. 部署模式")]),s._v(" "),t("p",[s._v("两种部署模式区别：")]),s._v(" "),t("p",[s._v("​\t一是redis的哨兵集群是基于主从复制来实现的，它可以实现读写分离，分担redis读操作的压力，而redis cluster里面的slaver节点，只是实现冷备的一个机制，它只有在master宕机之后才会工作。")]),s._v(" "),t("p",[s._v("​\t二是redis哨兵机制无法在线扩容，所以它的并发压力受限于单个服务器的资源的配置，redis cluster提供了一个基于slot槽的一个数据分片的一个机制，它可以实现在线扩容去提升读写的性能。")]),s._v(" "),t("p",[s._v("​\t三是从集群架构的层面来看。redis哨兵集群是一主多从，而redis cluster是一个多主多从的一个机制。")]),s._v(" "),t("h3",{attrs:{id:"_12-1-哨兵模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-哨兵模式"}},[s._v("#")]),s._v(" 12.1 哨兵模式")]),s._v(" "),t("blockquote",[t("p",[s._v("​\t哨兵机制是单节点的高可用方案，它主要是通过监控Redis主节点的状态，并在主节点出现故障时自动将从节点升级为主节点，从而实现高可用。哨兵机制具有简单、灵活、易于部署等特点，但是无法实现水平扩展。")])]),s._v(" "),t("p",[s._v("（1）主从复制中反客为主的自动版，如果主机Down掉，哨兵会从从机中选择一台作为主机，并将它设置为其他从机的主机，而且如果原来的主机再次启动的话也会成为从机。")]),s._v(" "),t("p",[s._v("（2）哨兵模式是一种特殊的模式，首先Redis提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例。")]),s._v(" "),t("p",[s._v("（3）当哨兵监测到Redis主机宕机，会自动将Slave切换成Master，然后通过发布订阅模式通知其他服务器，修改配置文件，让他们换主机。")]),s._v(" "),t("p",[s._v("（4）当一个哨兵进程对Redis服务器进行监控，可能会出现问题，为此可以使用哨兵进行监控， 各个哨兵之间还会进行监控，这就形成了多哨兵模式。")]),s._v(" "),t("h3",{attrs:{id:"_12-2-集群模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-集群模式"}},[s._v("#")]),s._v(" 12.2 集群模式")]),s._v(" "),t("blockquote",[t("p",[s._v("​\tRedis集群是一种分布式部署的方式，它将数据分散存储在多个节点上，可以水平扩展存储和处理能力。Redis集群采用的是分片（Sharding）技术，将数据划分为多个不同的范围，每个范围由不同的节点负责。同时集群提供自动分片、故障转移和数据重置等自动化功能，为应用提供高性能和高可用性。")])]),s._v(" "),t("h2",{attrs:{id:"bilibili-redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bilibili-redis"}},[s._v("#")]),s._v(" Bilibili-Redis")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /opt/software/redis/redis.conf /opt/software/redis-cluster/redis600"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /opt/software/redis/src/redis-server /opt/software/redis/src/redis-cli /opt/software/redis-cluster/redis600"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("cp -f redis.conf /opt/software/redis-cluster/redis600"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/software/redis-cluster/redis600"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" ./redis-server redis.conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -elf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-cli --cluster create "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6001 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6002 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6003 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6004 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6005 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6006 --cluster-replicas "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                                 \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#把节点加入到集群当中")]),s._v("\n--cluster-replicas    指定每个主节点有多少个从节点做主从复制\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("\nredis-cli -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6001")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#登录redis数据库")]),s._v("\ncluster slots        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看主从对应关系")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("flume-ng agent --conf conf/ --name a1 --conf-file /opt/module/bilibili/workspace/flume-bilibili-DANMU.conf\n\n\nchown -R -v saberlind:saberlind bilibili/\n\n\nfor i in {1..6}; do cp /opt/software/redis/redis.conf /opt/software/redis-cluster/redis600$i; cp /opt/software/redis/src/redis-server /opt/software/redis/src/redis-cli /opt/software/redis-cluster/redis600$i; done\n\n\nbin/flink run -m hadoop103:8081 -c bilibili.Kafka2Redis ./job/flink_bilibili.jar\n\nbin/flink run -m hadoop103:8081 -c bilibili.Redis2Elasticsearch ./job/flink_bilibili.jar\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);